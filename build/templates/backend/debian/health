{{define "main" -}}
#!/bin/bash
set -e
function max(){
    m="0"
    for n in "$@"
    do
        if egrep -o "^[0-9]+$" <<< "$n" &>/dev/null; then
            [ "$n" -gt "$m" ] && m="$n"
        fi
    done
    echo "$m"
}

if [[ "$(whoami)" != root ]]; then
 SUPERUSER=sudo
fi

{{- if .Backend.Healthcheck.LocalGetBlockCountTemplate }}
BACKEND_SIZE=$($SUPERUSER du -sb {{.Env.BackendDataPath}}/{{.Coin.Alias}} | awk '{printf("%0.2f GB\n", $1/1000/1000/1000)}')
{{- if .Backend.Healthcheck.ExplorerGetBlockCount }}
NETWORK=(
{{- range $index, $name := .Backend.Healthcheck.ExplorerGetBlockCount }}
"{{$name}}"
{{- end}}
)
NETWORK=($(printf '%s\n' ${NETWORK[@]} | shuf -n2))
NETWORK_BLOCK_HEIGHT=$(max ${NETWORK[*]})
{{- end}}

CURRENT_NODE_HEIGHT=$({{template "Backend.Healthcheck.LocalGetBlockCountTemplate" .}})
if ! egrep -o "^[0-9]+$" <<< "$CURRENT_NODE_HEIGHT" &>/dev/null; then
  msg="Status = [FAILED]"
  echo "$msg"
  {{- if .Backend.Healthcheck.LogsRedirect }}
  echo "$msg" >> /proc/1/fd/1
  {{- end}}
  exit 1
else
  {{- if .Backend.Healthcheck.ExplorerGetBlockCount }}
  msg="Status = [OK], Size = $BACKEND_SIZE"
  {{- else}}
   msg="Status = [OK], Size = $BACKEND_SIZE, isSynced = [DISABLED]"
   exit
  {{- end}}
fi
{{- if .Backend.Healthcheck.ExplorerGetBlockCount }}
if egrep -o "^[0-9]+$" <<< "$NETWORK_BLOCK_HEIGHT" &>/dev/null; then
  DIFF=$((NETWORK_BLOCK_HEIGHT-CURRENT_NODE_HEIGHT))
  DIFF=${DIFF#-}
else
  msg+=", isSynced = N/A"
  echo "$msg"
  {{- if .Backend.Healthcheck.LogsRedirect }}
  echo "$msg" >> /proc/1/fd/1
  {{- end}}
  exit
fi
if [[ "$DIFF" -le 10 ]]; then
  msg+=", isSynced = [YES] (Height: $CURRENT_NODE_HEIGHT)"
  echo "$msg"
  {{- if .Backend.Healthcheck.LogsRedirect }}
  echo "$msg" >> /proc/1/fd/1
  {{- end}}
else
  progress=$(awk 'BEGIN {total=ARGV[1] / ARGV[2]; printf("%.2f", total*100)}' $CURRENT_NODE_HEIGHT $NETWORK_BLOCK_HEIGHT)
  msg+=", isSynced = [NO] (Height: $NETWORK_BLOCK_HEIGHT/$CURRENT_NODE_HEIGHT, left: $DIFF, progress: $progress%)"
  echo "$msg"
  {{- if .Backend.Healthcheck.LogsRedirect }}
  echo "$msg" >> /proc/1/fd/1
  {{- end}}
  exit 1
fi
{{- end}}
{{- else}}
msg="Status = [HEALTCHECK DISABLED]"
echo "$msg"
{{- if .Backend.Healthcheck.LogsRedirect }}
echo "$msg" >> /proc/1/fd/1
{{- end}}
{{- end}}
{{end}}
